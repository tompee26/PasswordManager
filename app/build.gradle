apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        multiDexEnabled true
        applicationId "com.tompee.utilities.passwordmanager"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        if (project.hasProperty("release.properties") &&
                new File(project.property("release.properties")).exists()) {
            Properties props = new Properties()
            props.load(new FileInputStream(file(project.property("release.properties"))))

            release {
                storeFile file(props["keystore"])
                storePassword props['keystore.password']
                keyAlias props['keystore.alias']
                keyPassword props['keystore.aliaspassword']
            }
        }
    }
    buildTypes {
        if (project.hasProperty("release.properties") &&
                new File(project.property("release.properties")).exists()) {
            release {
                shrinkResources true
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def appcompat = "1.0.2"
    implementation "androidx.appcompat:appcompat:$appcompat"

    def material = "1.0.0"
    implementation "com.google.android.material:material:$material"

    def constraintLayout = "2.0.0-alpha2"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout"

    def multidex = "2.0.0"
    implementation "androidx.multidex:multidex:$multidex"

    def lifecycle = "2.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"

    //region Dagger
    def daggerVersion = "2.16"
    implementation "com.google.dagger:dagger:$daggerVersion"
    //noinspection NewerVersionAvailable,GradleDependency
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    //noinspection NewerVersionAvailable
    //noinspection GradleDependency
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    //noinspection NewerVersionAvailable,GradleDependency
    kapt "com.google.dagger:dagger-android-support:$daggerVersion"
    //endregion

    def rxKotlin = "2.3.0"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlin"

    def rxAndroid = "2.1.0"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"

    def room = "2.1.0-alpha02"
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-rxjava2:$room"
    kapt "androidx.room:room-compiler:$room"

    def reprint = "3.3.0@aar"
    implementation "com.github.ajalt.reprint:core:$reprint"
    implementation "com.github.ajalt.reprint:rxjava2:$reprint"

    def firebase = "16.0.6"
    implementation "com.google.firebase:firebase-core:$firebase"

    def firebase_auth = "16.0.5"
    implementation "com.google.firebase:firebase-auth:$firebase_auth"

    def firebase_firestore = "17.1.3"
    implementation "com.google.firebase:firebase-firestore:$firebase_firestore"

    implementation 'com.daimajia.easing:library:2.1@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'
}

apply plugin: 'com.google.gms.google-services'